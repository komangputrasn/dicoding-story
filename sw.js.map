{"mappings":"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","sources":["sw.js"],"sourcesContent":["const CACHE_NAME = \"dicoding-story-v1\";\r\nconst urlsToCache = [\r\n  \"/\",\r\n  \"/index.html\",\r\n  \"/app.js\",\r\n  \"/styles.css\",\r\n  \"/manifest.json\",\r\n  \"/views/home-page.js\",\r\n  \"/views/add-story-page.js\",\r\n  \"/views/login-page.js\",\r\n  \"/views/register-page.js\",\r\n  \"/views/detail-page.js\",\r\n  \"/presenters/auth-presenter.js\",\r\n  \"/presenters/base-presenter.js\",\r\n  \"/presenters/story-presenter.js\",\r\n  \"/services/api-service.js\",\r\n  \"/services/auth-service.js\",\r\n  \"/models/auth-model.js\",\r\n  \"/models/story-model.js\",\r\n  \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\",\r\n  \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\",\r\n];\r\n\r\n// Install event - cache resources\r\nself.addEventListener(\"install\", (event) => {\r\n  console.log(\"Service Worker installing...\");\r\n  event.waitUntil(\r\n    caches\r\n      .open(CACHE_NAME)\r\n      .then((cache) => {\r\n        console.log(\"Opened cache\");\r\n        return cache.addAll(urlsToCache);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to cache resources:\", error);\r\n      })\r\n  );\r\n  self.skipWaiting();\r\n});\r\n\r\n// Activate event - clean up old caches\r\nself.addEventListener(\"activate\", (event) => {\r\n  console.log(\"Service Worker activating...\");\r\n  event.waitUntil(\r\n    caches.keys().then((cacheNames) => {\r\n      return Promise.all(\r\n        cacheNames.map((cacheName) => {\r\n          if (cacheName !== CACHE_NAME) {\r\n            console.log(\"Deleting old cache:\", cacheName);\r\n            return caches.delete(cacheName);\r\n          }\r\n        })\r\n      );\r\n    })\r\n  );\r\n  self.clients.claim();\r\n});\r\n\r\n// Fetch event - serve cached content when offline\r\nself.addEventListener(\"fetch\", (event) => {\r\n  // Skip cross-origin requests\r\n  if (\r\n    !event.request.url.startsWith(self.location.origin) &&\r\n    !event.request.url.includes(\"unpkg.com\") &&\r\n    !event.request.url.includes(\"openstreetmap.org\")\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  event.respondWith(\r\n    caches.match(event.request).then((response) => {\r\n      // Return cached version or fetch from network\r\n      if (response) {\r\n        return response;\r\n      }\r\n\r\n      return fetch(event.request)\r\n        .then((response) => {\r\n          // Don't cache if not a valid response\r\n          if (\r\n            !response ||\r\n            response.status !== 200 ||\r\n            response.type !== \"basic\"\r\n          ) {\r\n            return response;\r\n          }\r\n\r\n          // Clone the response\r\n          const responseToCache = response.clone();\r\n\r\n          caches.open(CACHE_NAME).then((cache) => {\r\n            cache.put(event.request, responseToCache);\r\n          });\r\n\r\n          return response;\r\n        })\r\n        .catch(() => {\r\n          // Return offline page for navigation requests\r\n          if (event.request.mode === \"navigate\") {\r\n            return caches.match(\"/index.html\");\r\n          }\r\n        });\r\n    })\r\n  );\r\n});\r\n\r\n// Push notification event\r\nself.addEventListener(\"push\", (event) => {\r\n  console.log(\"Push notification received:\", event);\r\n\r\n  let notificationData = {\r\n    title: \"Dicoding Story\",\r\n    body: \"You have a new notification\",\r\n    icon: \"/icons/icon-192x192.png\",\r\n    badge: \"/icons/icon-72x72.png\",\r\n    tag: \"story-notification\",\r\n  };\r\n\r\n  if (event.data) {\r\n    try {\r\n      const data = event.data.json();\r\n      notificationData = {\r\n        title: data.title || notificationData.title,\r\n        body: data.options?.body || notificationData.body,\r\n        icon: data.options?.icon || notificationData.icon,\r\n        badge: data.options?.badge || notificationData.badge,\r\n        tag: data.options?.tag || notificationData.tag,\r\n        data: data.options?.data || {},\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error parsing push data:\", error);\r\n    }\r\n  }\r\n\r\n  event.waitUntil(\r\n    self.registration.showNotification(notificationData.title, {\r\n      body: notificationData.body,\r\n      icon: notificationData.icon,\r\n      badge: notificationData.badge,\r\n      tag: notificationData.tag,\r\n      data: notificationData.data,\r\n      requireInteraction: true,\r\n      actions: [\r\n        {\r\n          action: \"view\",\r\n          title: \"View Story\",\r\n        },\r\n        {\r\n          action: \"close\",\r\n          title: \"Close\",\r\n        },\r\n      ],\r\n    })\r\n  );\r\n});\r\n\r\n// Notification click event\r\nself.addEventListener(\"notificationclick\", (event) => {\r\n  console.log(\"Notification click received:\", event);\r\n\r\n  event.notification.close();\r\n\r\n  if (event.action === \"view\") {\r\n    event.waitUntil(clients.openWindow(\"/\"));\r\n  }\r\n});\r\n\r\n// Background sync event (for offline story submission)\r\nself.addEventListener(\"sync\", (event) => {\r\n  console.log(\"Background sync triggered:\", event.tag);\r\n\r\n  if (event.tag === \"background-sync-story\") {\r\n    event.waitUntil(syncOfflineStories());\r\n  }\r\n});\r\n\r\n// Function to sync offline stories\r\nasync function syncOfflineStories() {\r\n  try {\r\n    // Open IndexedDB and sync pending stories\r\n    const db = await openDB();\r\n    const transaction = db.transaction([\"offline-stories\"], \"readonly\");\r\n    const store = transaction.objectStore(\"offline-stories\");\r\n    const offlineStories = await getAllFromStore(store);\r\n\r\n    for (const story of offlineStories) {\r\n      try {\r\n        // Attempt to sync with server\r\n        const response = await fetch(\"/api/stories\", {\r\n          method: \"POST\",\r\n          body: story.formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          // Remove from offline storage on successful sync\r\n          const deleteTransaction = db.transaction(\r\n            [\"offline-stories\"],\r\n            \"readwrite\"\r\n          );\r\n          const deleteStore = deleteTransaction.objectStore(\"offline-stories\");\r\n          await deleteStore.delete(story.id);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to sync story:\", error);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Background sync failed:\", error);\r\n  }\r\n}\r\n\r\n// Helper functions for IndexedDB\r\nfunction openDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(\"dicoding-story-db\", 1);\r\n\r\n    request.onerror = () => reject(request.error);\r\n    request.onsuccess = () => resolve(request.result);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"offline-stories\")) {\r\n        db.createObjectStore(\"offline-stories\", {\r\n          keyPath: \"id\",\r\n          autoIncrement: true,\r\n        });\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nfunction getAllFromStore(store) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = store.getAll();\r\n    request.onerror = () => reject(request.error);\r\n    request.onsuccess = () => resolve(request.result);\r\n  });\r\n}\r\n"],"names":[],"version":3,"file":"sw.js.map","sourceRoot":"/__parcel_source_root/"}